@using PagedList;
@using PagedList.Mvc;
@model IEnumerable<GameC.Data.Entities.Game>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@if (User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}

@if (User.Identity.IsAuthenticated)
{
    using (Html.BeginForm("Index", "Game", FormMethod.Get))
    {
        <p>
            Find by name: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" />
        </p>
    }
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Release Year
        </th>
        <th>
            @Html.ActionLink("Genre", "Index", new { sortOrder = ViewBag.GenreSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Rating", "Index", new { sortOrder = ViewBag.RatingSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating.Value)
            </td>
            @if (User.Identity.IsAuthenticated) {
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.ID })
                @if (User.IsInRole("Admin"))
                {
                    <text>|</text>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID });
                    <text>|</text>
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID });
                }
            </td>
            }
        </tr>
    }

</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
